{"version":3,"sources":["components/form.component.jsx","components/weather.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","props","className","error","role","onSubmit","loadweather","type","name","autoComplete","placeholder","minmaxTemp","min","max","Weather","city","weatherIcon","temp_celsius","temp_min","temp_max","description","App","calculateCelsius","temp","Math","floor","getWeatherIcon","rangeId","setState","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","getWeather","e","a","preventDefault","target","elements","value","country","fetch","api_call","json","response","cod","sys","celsius","main","weather","id","state","undefined","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f1516e0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./form.style.css\";\r\n\r\nconst Form = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      {/* If error is true then call the errorMessage() function otherwise ignore */}\r\n      <div>{props.error ? errorMessage() : null}</div>\r\n      <form onSubmit={props.loadweather}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 offset-md-2\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"city\"\r\n              autoComplete=\"off\"\r\n              placeholder=\"City\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"country\"\r\n              autoComplete=\"off\"\r\n              placeholder=\"Country\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 mt-md-0 py-2 text-md-left\">\r\n            <button className=\"btn btn-warning\">Get Weather</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction errorMessage() {\r\n  return (\r\n    <div className=\"alert alert-danger mx-5\" role=\"alert\">\r\n      Please enter valid City and Country!\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport \"./form.style.css\";\r\n\r\nconst Weather = (props) => {\r\n  return (\r\n    <div className=\"container text-light height-100-css\">\r\n      <div className=\"cards pt-4\">\r\n        <h1>{props.city}</h1>\r\n        <h5 className=\"py-4\">\r\n          <i className={`wi ${props.weatherIcon} display-1`}></i>\r\n        </h5>\r\n\r\n        {props.temp_celsius ? (\r\n          <h1 className=\"py-2\">{props.temp_celsius}&deg;</h1>\r\n        ) : null}\r\n\r\n        {/* Show Min and Max temp */}\r\n        {minmaxTemp(props.temp_min, props.temp_max)}\r\n\r\n        <h4 className=\"capitalize py-3\">{props.description}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst minmaxTemp = (min, max) => {\r\n  if (min || max) {\r\n    return (\r\n      <h3>\r\n        <span className=\"px-4\">{min}&deg;</span>\r\n        <span className=\"px-4\">{max}&deg;</span>\r\n      </h3>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Weather;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/form.component\";\nimport Weather from \"./components/weather.component\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./weather-icons/css/weather-icons.css\";\n\nconst API_KEY = \"8c561b585a38e20a6f4c64315fd7d6df\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false,\n    };\n\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\",\n    };\n  }\n\n  calculateCelsius = (temp) => {\n    let cel = Math.floor(temp - 273.15);\n    return cel;\n  };\n\n  getWeatherIcon = (rangeId) => {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({ icon: this.weatherIcon.Thunderstorm });\n        break;\n\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({ icon: this.weatherIcon.Drizzle });\n        break;\n\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({ icon: this.weatherIcon.Rain });\n        break;\n\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({ icon: this.weatherIcon.Snow });\n        break;\n\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({ icon: this.weatherIcon.Atmosphere });\n        break;\n\n      case rangeId === 800:\n        this.setState({ icon: this.weatherIcon.Clear });\n        break;\n\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({ icon: this.weatherIcon.Clouds });\n        break;\n\n      default:\n        this.setState({ icon: this.weatherIcon.Clouds });\n    }\n  };\n\n  // API call: api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\n  getWeather = async (e) => {\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    if (city && country) {\n      const api_call = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`\n      );\n\n      const response = await api_call.json();\n\n      if (response.cod !== 200) {\n        this.setState({ error: true });\n\n        return;\n      }\n\n      this.setState({\n        city: `${response.name}, ${response.sys.country}`,\n        celsius: this.calculateCelsius(response.main.temp),\n        temp_max: this.calculateCelsius(response.main.temp_max),\n        temp_min: this.calculateCelsius(response.main.temp_min),\n        description: response.weather[0].description,\n        error: false,\n      });\n\n      this.getWeatherIcon(response.weather[0].id);\n    } else {\n      this.setState({ error: true });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Form loadweather={this.getWeather} error={this.state.error} />\n        <Weather\n          city={this.state.city}\n          temp_celsius={this.state.celsius}\n          temp_min={this.state.temp_min}\n          temp_max={this.state.temp_max}\n          description={this.state.description}\n          weatherIcon={this.state.icon}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}